buildscript {
    ext.kotlin_version = '1.2.51'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.bmuschko:gradle-docker-plugin:3.2.3"
    }
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin

group 'unit'
version '1.0-SNAPSHOT'

mainClassName = "unitfm.UnitAppKt"

ext.ktor_version = '0.9.5'

sourceCompatibility = 1.8

repositories {
    jcenter()
    maven { url "http://kotlin.bintray.com/ktor" }
    mavenCentral()
}

dependencies {
    compile "ch.qos.logback:logback-classic:1.2.3"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.4"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-jackson:$ktor_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// Tasks
import com.bmuschko.gradle.docker.tasks.image.DockerPullImage
import com.bmuschko.gradle.docker.tasks.container.DockerCreateContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStartContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStopContainer

task postgresImage(type: DockerPullImage) {
    repository = 'postgres'
    tag = '10.5-alpine'
}


task postgresContainer(type: DockerCreateContainer) {
    dependsOn postgresImage
    targetImageId { postgresImage.getImageId() }
    portBindings = ['5432:5432']
    env = [
            "POSTGRES_USER=kjeschkies", "POSTGRES_PASSWORD=1234"
    ]
}

task startPostgres(type: DockerStartContainer) {
    dependsOn postgresContainer
    targetContainerId { postgresContainer.getContainerId() }
}

task stopPostgres(type: DockerStopContainer) {
    targetContainerId { postgresContainer.getContainerId() }
}
